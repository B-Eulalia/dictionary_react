{"ast":null,"code":"var _jsxFileName = \"/Users/fmarcu/Desktop/dic1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport AddList from './component/addElementList';\nimport Title from './component/title';\nimport SearchW from './component/searchWord';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [listItems, setCount] = useState([]);\n  const [wordInputAddList, setMARE] = useState('');\n  const [wordInputSearch, setName] = useState('');\n  const [text, setValue] = useState(''); //   constructor(props) {\n  //     super(props);\n  //    this.state = {\n  //     listItems: [],\n  //     wordInputAddList:'',\n  //     wordInputSearch:'',\n  //     text:'',\n  // //   }\n  // // }\n  //   wordNew = ({target:{value}}) => this.setState({\n  //     wordInputAddList: value\n  //   })\n  // addWordList = e =>{\n  // e.preventDefault()\n  // let listWord = this.state.listItems;\n  //   let wordAdd = this.state.wordInputAddList;\n  // if (listWord.length === 0 && wordAdd !== '') {\n  //       this.setState({\n  //   listItems: [...this.state.listItems, this.state.wordInputAddList],\n  //   wordInputAddList:''\n  // })\n  // } else {\n  //   for (let j = 0; j < listWord.length; ++j) {\n  //        if (listWord[j] === wordAdd) {\n  //         alert(\"The word is in the dictionary\");\n  //         break;\n  //       } else if (listWord[j] !== wordAdd && wordAdd !== '') {\n  //         this.setState({\n  //         listItems: [...this.state.listItems, this.state.wordInputAddList],\n  //         wordInputAddList:''\n  //       })\n  //     }\n  //   }\n  // }\n  // }   \n  // wordSearch = ({target:{value}}) => this.setState({\n  // wordInputSearch: value\n  // })\n  // searchWordList = e =>{\n  // e.preventDefault()\n  // let wordLookFor = this.state.wordInputSearch;\n  // let listWord = this.state.listItems;\n  // for (let i = 0; i < listWord.length; ++i) {\n  //      if (listWord[i] === wordLookFor) {\n  //       this.setState({\n  //         text: 'Word exist in the dictionary',\n  //       })\n  //        break;\n  //      } else {\n  //       this.setState({\n  //         text:'Word dont exist in the dictionary',\n  //       })\n  //      }\n  //     }\n  //    }  \n  // render() { \n  // \n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AddList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SearchW, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n} // \n// {/* //     <br></br> */}\n// {/* //     <form onSubmit={this.addWordList}>Word  \n// //       <input value={this.state.wordInputAddList} onChange={this.wordNew} />\n// //       <button type=\"submit\">Add word</button>\n// //     </form>\n// //     <br></br>\n// //     <form onSubmit={this.searchWordList}>Look for the word   \n// //       <input value={this.state.wordInputSearch} onChange={this.wordSearch}/>\n// //       <button type=\"submit\">Search</button>\n// //     </form> */}\n// {/* //     <h4> */}\n// {/* //     { */}\n// {/* //         this.state.listItems.map((li,key) => <li {...{key}}>{li}</li>) */}\n// {/* //     } */}\n// {/* //     </h4> */}\n// {/* //     <h2>{this.state.text}</h2> */}\n// }\n// }\n\n\n_s(App, \"KBMNONGpSyNUT4POq/P+zTRnQPU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["AddList","Title","SearchW","App","listItems","setCount","useState","wordInputAddList","setMARE","wordInputSearch","setName","text","setValue"],"sources":["/Users/fmarcu/Desktop/dic1/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport AddList from './component/addElementList';\nimport Title from './component/title';\nimport SearchW from './component/searchWord';\n\nfunction App () {\n  const [listItems, setCount] = useState([]);\n  const [wordInputAddList,setMARE] = useState('');\n  const [wordInputSearch,setName] = useState('');\n  const [text,setValue] = useState('');\n//   constructor(props) {\n//     super(props);\n//    this.state = {\n//     listItems: [],\n//     wordInputAddList:'',\n//     wordInputSearch:'',\n//     text:'',\n// //   }\n// // }\n//   wordNew = ({target:{value}}) => this.setState({\n//     wordInputAddList: value\n//   })\n\n// addWordList = e =>{\n// e.preventDefault()\n// let listWord = this.state.listItems;\n//   let wordAdd = this.state.wordInputAddList;\n// if (listWord.length === 0 && wordAdd !== '') {\n//       this.setState({\n//   listItems: [...this.state.listItems, this.state.wordInputAddList],\n//   wordInputAddList:''\n// })\n// } else {\n//   for (let j = 0; j < listWord.length; ++j) {\n//        if (listWord[j] === wordAdd) {\n//         alert(\"The word is in the dictionary\");\n//         break;\n//       } else if (listWord[j] !== wordAdd && wordAdd !== '') {\n//         this.setState({\n//         listItems: [...this.state.listItems, this.state.wordInputAddList],\n//         wordInputAddList:''\n//       })\n//     }\n//   }\n// }\n// }   \n// wordSearch = ({target:{value}}) => this.setState({\n// wordInputSearch: value\n// })\n\n// searchWordList = e =>{\n// e.preventDefault()\n// let wordLookFor = this.state.wordInputSearch;\n// let listWord = this.state.listItems;\n// for (let i = 0; i < listWord.length; ++i) {\n//      if (listWord[i] === wordLookFor) {\n//       this.setState({\n//         text: 'Word exist in the dictionary',\n//       })\n//        break;\n//      } else {\n//       this.setState({\n//         text:'Word dont exist in the dictionary',\n//       })\n//      }\n//     }\n//    }  \n// render() { \n  // \nreturn (\n   <><p>\n    <Title />\n        </p>\n  <div>\n      <AddList />\n      <SearchW />\n    </div></>\n)\n}\n// \n// {/* //     <br></br> */}\n// {/* //     <form onSubmit={this.addWordList}>Word  \n// //       <input value={this.state.wordInputAddList} onChange={this.wordNew} />\n// //       <button type=\"submit\">Add word</button>\n// //     </form>\n// //     <br></br>\n// //     <form onSubmit={this.searchWordList}>Look for the word   \n// //       <input value={this.state.wordInputSearch} onChange={this.wordSearch}/>\n// //       <button type=\"submit\">Search</button>\n// //     </form> */}\n    \n// {/* //     <h4> */}\n// {/* //     { */}\n// {/* //         this.state.listItems.map((li,key) => <li {...{key}}>{li}</li>) */}\n// {/* //     } */}\n// {/* //     </h4> */}\n// {/* //     <h2>{this.state.text}</h2> */}\n\n// }\n// }\nexport default App;\n"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,OAAP,MAAoB,4BAApB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;;AAEA,SAASC,GAAT,GAAgB;EAAA;;EACd,MAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBC,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACC,gBAAD,EAAkBC,OAAlB,IAA6BF,QAAQ,CAAC,EAAD,CAA3C;EACA,MAAM,CAACG,eAAD,EAAiBC,OAAjB,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACK,IAAD,EAAMC,QAAN,IAAkBN,QAAQ,CAAC,EAAD,CAAhC,CAJc,CAKhB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACE;;EACF,oBACG;IAAA,wBAAE;MAAA,uBACD,QAAC,KAAD;QAAA;QAAA;QAAA;MAAA;IADC;MAAA;MAAA;MAAA;IAAA,QAAF,eAGD;MAAA,wBACI,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAHC;EAAA,gBADH;AASC,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;GA9FSH,G;;KAAAA,G;AA+FT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}