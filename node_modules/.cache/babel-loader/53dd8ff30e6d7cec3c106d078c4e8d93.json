{"ast":null,"code":"var _jsxFileName = \"/Users/fmarcu/Desktop/dic1/src/component/searchWord.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [wordInputSearch, setWordInputSearch] = useState('');\n\nfunction SearchW(props) {\n  // const [wordInputAddList, setWordInputAddList] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: searchWordList,\n    children: [\"Look for the word\", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: wordInputSearch,\n      onChange: wordSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 13\n  }, this);\n}\n\n_c = SearchW;\n\nfunction searchWordList(props) {\n  props.preventDefault();\n  let wordLookFor = props.wordInputSearch;\n  let listWord = props.listItems;\n\n  for (let i = 0; i < listWord.length; ++i) {\n    if (listWord[i] === wordLookFor) {\n      this.setState({\n        text: 'Word exist in the dictionary'\n      });\n      break;\n    } else {\n      this.setState({\n        text: 'Word dont exist in the dictionary'\n      });\n    }\n  }\n}\n\nexport default SearchW;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchW\");","map":{"version":3,"names":["React","wordInputSearch","setWordInputSearch","useState","SearchW","props","searchWordList","wordSearch","preventDefault","wordLookFor","listWord","listItems","i","length","setState","text"],"sources":["/Users/fmarcu/Desktop/dic1/src/component/searchWord.js"],"sourcesContent":["import React from \"react\";\nconst [wordInputSearch, setWordInputSearch] = useState('');\nfunction SearchW(props) {\n    // const [wordInputAddList, setWordInputAddList] = useState('');\n    return  <form onSubmit={searchWordList}>Look for the word   \n       <input value={wordInputSearch} onChange={wordSearch}/>\n       <button type=\"submit\">Search</button>\n       </form>\n}\nfunction searchWordList (props) {\n    props.preventDefault()\n    let wordLookFor = props.wordInputSearch;\n    let listWord = props.listItems;\n    for (let i = 0; i < listWord.length; ++i) {\n         if (listWord[i] === wordLookFor) {\n          this.setState({\n            text: 'Word exist in the dictionary',\n          })\n           break;\n         } else {\n          this.setState({\n            text:'Word dont exist in the dictionary',\n          })\n         }\n        }\n       }  \nexport default SearchW;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCC,QAAQ,CAAC,EAAD,CAAtD;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EACpB;EACA,oBAAQ;IAAM,QAAQ,EAAEC,cAAhB;IAAA,6CACL;MAAO,KAAK,EAAEL,eAAd;MAA+B,QAAQ,EAAEM;IAAzC;MAAA;MAAA;MAAA;IAAA,QADK,eAEL;MAAQ,IAAI,EAAC,QAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFK;EAAA;IAAA;IAAA;IAAA;EAAA,QAAR;AAIH;;KANQH,O;;AAOT,SAASE,cAAT,CAAyBD,KAAzB,EAAgC;EAC5BA,KAAK,CAACG,cAAN;EACA,IAAIC,WAAW,GAAGJ,KAAK,CAACJ,eAAxB;EACA,IAAIS,QAAQ,GAAGL,KAAK,CAACM,SAArB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqC,EAAED,CAAvC,EAA0C;IACrC,IAAIF,QAAQ,CAACE,CAAD,CAAR,KAAgBH,WAApB,EAAiC;MAChC,KAAKK,QAAL,CAAc;QACZC,IAAI,EAAE;MADM,CAAd;MAGC;IACD,CALD,MAKO;MACN,KAAKD,QAAL,CAAc;QACZC,IAAI,EAAC;MADO,CAAd;IAGA;EACD;AACD;;AACR,eAAeX,OAAf"},"metadata":{},"sourceType":"module"}