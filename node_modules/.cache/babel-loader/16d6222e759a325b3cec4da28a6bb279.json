{"ast":null,"code":"var _jsxFileName = \"/Users/fmarcu/Desktop/dic1/src/App.js\";\nimport './App.css';\nimport AddList from './component/addElementList';\nimport Title from './component/title';\nimport SearchW from './component/searchWord';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  const listItems = [];\n  const text = '';\n  listItems += wordInputAddList; // const [listItems, setCount] = useState([]);\n  // const [listItems,wordInputAddList] = useState(string);\n  // const [wordSearch,wordInputSearch] = useState(string);\n  // const [wordInputSearch,setName] = useState('');\n  // const [text,setValue] = useState('');\n  //   constructor(props) {\n  //     super(props);\n  //    this.state = {\n  //     listItems: [],\n  //     wordInputAddList:'',\n  //     wordInputSearch:'',\n  //     text:'',\n  // //   }\n  // // }\n  // wordNew = ({target:{value}}) => .setState({\n  //   wordInputAddList: value\n  // })\n\n  function addWordList(props) {\n    props.preventDefault();\n    let listWord = props.listItems;\n    let wordAdd = props.wordInputAddList;\n\n    if (listWord.length === 0 && wordAdd !== '') {\n      this.setState({\n        listItems: [...props.listItems, props.wordInputAddList],\n        wordInputAddList: ''\n      });\n    } else {\n      for (let j = 0; j < listWord.length; ++j) {\n        if (listWord[j] === wordAdd) {\n          alert(\"The word is in the dictionary\");\n          break;\n        } else if (listWord[j] !== wordAdd && wordAdd !== '') {\n          this.setState({\n            listItems: [...props.listItems, props.wordInputAddList],\n            wordInputAddList: ''\n          });\n        }\n      }\n    }\n  } // wordSearch = ({target:{value}}) => this.setState({\n  // wordInputSearch: value\n  // })\n\n\n  function searchWordList() {\n    props.preventDefault();\n    let wordLookFor = props.wordInputSearch;\n    let listWord = props.listItems;\n\n    for (let i = 0; i < listWord.length; ++i) {\n      if (listWord[i] === wordLookFor) {\n        this.setState({\n          text: 'Word exist in the dictionary'\n        });\n        break;\n      } else {\n        this.setState({\n          text: 'Word dont exist in the dictionary'\n        });\n      }\n    }\n  } // render() { \n  // \n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AddList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SearchW, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n} // \n// {/* //     <br></br> */}\n// {/* //     <form onSubmit={this.addWordList}>Word  \n// //       <input value={this.state.wordInputAddList} onChange={this.wordNew} />\n// //       <button type=\"submit\">Add word</button>\n// //     </form>\n// //     <br></br>\n// //     <form onSubmit={this.searchWordList}>Look for the word   \n// //       <input value={this.state.wordInputSearch} onChange={this.wordSearch}/>\n// //       <button type=\"submit\">Search</button>\n// //     </form> */}\n// {/* //     <h4> */}\n// {/* //     { */}\n// {/* //         this.state.listItems.map((li,key) => <li {...{key}}>{li}</li>) */}\n// {/* //     } */}\n// {/* //     </h4> */}\n// {/* //     <h2>{this.state.text}</h2> */}\n// }\n// }\n\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["AddList","Title","SearchW","useState","App","props","listItems","text","wordInputAddList","addWordList","preventDefault","listWord","wordAdd","length","setState","j","alert","searchWordList","wordLookFor","wordInputSearch","i"],"sources":["/Users/fmarcu/Desktop/dic1/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport AddList from './component/addElementList';\nimport Title from './component/title';\nimport SearchW from './component/searchWord';\nimport { useState } from 'react';\n\nfunction App (props) {\n \nconst listItems = [];\nconst text = '';\nlistItems += wordInputAddList;\n  // const [listItems, setCount] = useState([]);\n  // const [listItems,wordInputAddList] = useState(string);\n  // const [wordSearch,wordInputSearch] = useState(string);\n  // const [wordInputSearch,setName] = useState('');\n  // const [text,setValue] = useState('');\n//   constructor(props) {\n//     super(props);\n//    this.state = {\n//     listItems: [],\n//     wordInputAddList:'',\n//     wordInputSearch:'',\n//     text:'',\n// //   }\n// // }\n  // wordNew = ({target:{value}}) => .setState({\n  //   wordInputAddList: value\n  // })\n\n function addWordList(props) {\nprops.preventDefault()\nlet listWord = props.listItems;\n  let wordAdd = props.wordInputAddList;\nif (listWord.length === 0 && wordAdd !== '') {\n      this.setState({\n  listItems: [...props.listItems, props.wordInputAddList],\n  wordInputAddList:''\n})\n} else {\n  for (let j = 0; j < listWord.length; ++j) {\n       if (listWord[j] === wordAdd) {\n        alert(\"The word is in the dictionary\");\n        break;\n      } else if (listWord[j] !== wordAdd && wordAdd !== '') {\n        this.setState({\n        listItems: [...props.listItems, props.wordInputAddList],\n        wordInputAddList:''\n      })\n    }\n  }\n}\n}   \n// wordSearch = ({target:{value}}) => this.setState({\n// wordInputSearch: value\n// })\n\nfunction searchWordList () {\nprops.preventDefault()\nlet wordLookFor = props.wordInputSearch;\nlet listWord = props.listItems;\nfor (let i = 0; i < listWord.length; ++i) {\n     if (listWord[i] === wordLookFor) {\n      this.setState({\n        text: 'Word exist in the dictionary',\n      })\n       break;\n     } else {\n      this.setState({\n        text:'Word dont exist in the dictionary',\n      })\n     }\n    }\n   }  \n// render() { \n  // \nreturn (\n   <><p>\n    <Title />\n        </p>\n  <div>\n      <AddList />\n      <SearchW />\n    </div></>\n)\n}\n// \n// {/* //     <br></br> */}\n// {/* //     <form onSubmit={this.addWordList}>Word  \n// //       <input value={this.state.wordInputAddList} onChange={this.wordNew} />\n// //       <button type=\"submit\">Add word</button>\n// //     </form>\n// //     <br></br>\n// //     <form onSubmit={this.searchWordList}>Look for the word   \n// //       <input value={this.state.wordInputSearch} onChange={this.wordSearch}/>\n// //       <button type=\"submit\">Search</button>\n// //     </form> */}\n    \n// {/* //     <h4> */}\n// {/* //     { */}\n// {/* //         this.state.listItems.map((li,key) => <li {...{key}}>{li}</li>) */}\n// {/* //     } */}\n// {/* //     </h4> */}\n// {/* //     <h2>{this.state.text}</h2> */}\n\n// }\n// }\nexport default App;\n"],"mappings":";AACA,OAAO,WAAP;AACA,OAAOA,OAAP,MAAoB,4BAApB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,SAASC,GAAT,CAAcC,KAAd,EAAqB;EAErB,MAAMC,SAAS,GAAG,EAAlB;EACA,MAAMC,IAAI,GAAG,EAAb;EACAD,SAAS,IAAIE,gBAAb,CAJqB,CAKnB;EACA;EACA;EACA;EACA;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACE;EACA;EACA;;EAED,SAASC,WAAT,CAAqBJ,KAArB,EAA4B;IAC7BA,KAAK,CAACK,cAAN;IACA,IAAIC,QAAQ,GAAGN,KAAK,CAACC,SAArB;IACE,IAAIM,OAAO,GAAGP,KAAK,CAACG,gBAApB;;IACF,IAAIG,QAAQ,CAACE,MAAT,KAAoB,CAApB,IAAyBD,OAAO,KAAK,EAAzC,EAA6C;MACvC,KAAKE,QAAL,CAAc;QAClBR,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBD,KAAK,CAACG,gBAA3B,CADO;QAElBA,gBAAgB,EAAC;MAFC,CAAd;IAIL,CALD,MAKO;MACL,KAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,QAAQ,CAACE,MAA7B,EAAqC,EAAEE,CAAvC,EAA0C;QACrC,IAAIJ,QAAQ,CAACI,CAAD,CAAR,KAAgBH,OAApB,EAA6B;UAC5BI,KAAK,CAAC,+BAAD,CAAL;UACA;QACD,CAHA,MAGM,IAAIL,QAAQ,CAACI,CAAD,CAAR,KAAgBH,OAAhB,IAA2BA,OAAO,KAAK,EAA3C,EAA+C;UACpD,KAAKE,QAAL,CAAc;YACdR,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBD,KAAK,CAACG,gBAA3B,CADG;YAEdA,gBAAgB,EAAC;UAFH,CAAd;QAIH;MACF;IACF;EACA,CA7CoB,CA8CrB;EACA;EACA;;;EAEA,SAASS,cAAT,GAA2B;IAC3BZ,KAAK,CAACK,cAAN;IACA,IAAIQ,WAAW,GAAGb,KAAK,CAACc,eAAxB;IACA,IAAIR,QAAQ,GAAGN,KAAK,CAACC,SAArB;;IACA,KAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,QAAQ,CAACE,MAA7B,EAAqC,EAAEO,CAAvC,EAA0C;MACrC,IAAIT,QAAQ,CAACS,CAAD,CAAR,KAAgBF,WAApB,EAAiC;QAChC,KAAKJ,QAAL,CAAc;UACZP,IAAI,EAAE;QADM,CAAd;QAGC;MACD,CALD,MAKO;QACN,KAAKO,QAAL,CAAc;UACZP,IAAI,EAAC;QADO,CAAd;MAGA;IACD;EACD,CAlEiB,CAmErB;EACE;;;EACF,oBACG;IAAA,wBAAE;MAAA,uBACD,QAAC,KAAD;QAAA;QAAA;QAAA;MAAA;IADC;MAAA;MAAA;MAAA;IAAA,QAAF,eAGD;MAAA,wBACI,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAHC;EAAA,gBADH;AASC,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;KAnGSH,G;AAoGT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}