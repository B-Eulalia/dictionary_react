{"ast":null,"code":"var _jsxFileName = \"/Users/fmarcu/Desktop/dic1/src/App.js\";\nimport React, { Component, useState } from 'react';\nimport './App.css';\nimport AddList from './addElementList';\nimport Title from './title';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  // const [listItems, setCount] = useState([]);\n  // const [wordInputAddList,setMARE] = useState('');\n  // const [wordInputSearch,setName] = useState('');\n  // const [text,setValue] = useState('');\n  //   constructor(props) {\n  //     super(props);\n  //    this.state = {\n  //     listItems: [],\n  //     wordInputAddList:'',\n  //     wordInputSearch:'',\n  //     text:'',\n  //   }\n  // }\n  //   wordNew = ({target:{value}}) => this.setState({\n  //     wordInputAddList: value\n  //   })\n  // addWordList = e =>{\n  // e.preventDefault()\n  // let listWord = this.state.listItems;\n  //   let wordAdd = this.state.wordInputAddList;\n  // if (listWord.length === 0 && wordAdd !== '') {\n  //       this.setState({\n  //   listItems: [...this.state.listItems, this.state.wordInputAddList],\n  //   wordInputAddList:''\n  // })\n  // } else {\n  //   for (let j = 0; j < listWord.length; ++j) {\n  //        if (listWord[j] === wordAdd) {\n  //         alert(\"The word is in the dictionary\");\n  //         break;\n  //       } else if (listWord[j] !== wordAdd && wordAdd !== '') {\n  //         this.setState({\n  //         listItems: [...this.state.listItems, this.state.wordInputAddList],\n  //         wordInputAddList:''\n  //       })\n  //     }\n  //   }\n  // }\n  // }   \n  // wordSearch = ({target:{value}}) => this.setState({\n  // wordInputSearch: value\n  // })\n  // searchWordList = e =>{\n  // e.preventDefault()\n  // let wordLookFor = this.state.wordInputSearch;\n  // let listWord = this.state.listItems;\n  // for (let i = 0; i < listWord.length; ++i) {\n  //      if (listWord[i] === wordLookFor) {\n  //       this.setState({\n  //         text: 'Word exist in the dictionary',\n  //       })\n  //        break;\n  //      } else {\n  //       this.setState({\n  //         text:'Word dont exist in the dictionary',\n  //       })\n  //      }\n  //     }\n  //    }  \n  // render() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(AddList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 3\n  }, this); // }\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Component","useState","AddList","Title","App","props"],"sources":["/Users/fmarcu/Desktop/dic1/src/App.js"],"sourcesContent":["import React, { Component, useState } from 'react';\nimport './App.css';\nimport AddList from './addElementList';\nimport Title from './title';\n\nfunction App (props) {\n  // const [listItems, setCount] = useState([]);\n  // const [wordInputAddList,setMARE] = useState('');\n  // const [wordInputSearch,setName] = useState('');\n  // const [text,setValue] = useState('');\n//   constructor(props) {\n//     super(props);\n//    this.state = {\n//     listItems: [],\n//     wordInputAddList:'',\n//     wordInputSearch:'',\n//     text:'',\n//   }\n// }\n//   wordNew = ({target:{value}}) => this.setState({\n//     wordInputAddList: value\n//   })\n\n// addWordList = e =>{\n// e.preventDefault()\n// let listWord = this.state.listItems;\n//   let wordAdd = this.state.wordInputAddList;\n// if (listWord.length === 0 && wordAdd !== '') {\n//       this.setState({\n//   listItems: [...this.state.listItems, this.state.wordInputAddList],\n//   wordInputAddList:''\n// })\n// } else {\n//   for (let j = 0; j < listWord.length; ++j) {\n//        if (listWord[j] === wordAdd) {\n//         alert(\"The word is in the dictionary\");\n//         break;\n//       } else if (listWord[j] !== wordAdd && wordAdd !== '') {\n//         this.setState({\n//         listItems: [...this.state.listItems, this.state.wordInputAddList],\n//         wordInputAddList:''\n//       })\n//     }\n//   }\n// }\n// }   \n// wordSearch = ({target:{value}}) => this.setState({\n// wordInputSearch: value\n// })\n\n// searchWordList = e =>{\n// e.preventDefault()\n// let wordLookFor = this.state.wordInputSearch;\n// let listWord = this.state.listItems;\n// for (let i = 0; i < listWord.length; ++i) {\n//      if (listWord[i] === wordLookFor) {\n//       this.setState({\n//         text: 'Word exist in the dictionary',\n//       })\n//        break;\n//      } else {\n//       this.setState({\n//         text:'Word dont exist in the dictionary',\n//       })\n//      }\n//     }\n//    }  \n// render() {\nreturn (\n  <div>\n    <Title/>\n    <AddList/>\n{/* //     <br></br> */}\n{/* //     <form onSubmit={this.addWordList}>Word  \n//       <input value={this.state.wordInputAddList} onChange={this.wordNew} />\n//       <button type=\"submit\">Add word</button>\n//     </form>\n//     <br></br>\n//     <form onSubmit={this.searchWordList}>Look for the word   \n//       <input value={this.state.wordInputSearch} onChange={this.wordSearch}/>\n//       <button type=\"submit\">Search</button>\n//     </form> */}\n    \n{/* //     <h4> */}\n{/* //     { */}\n{/* //         this.state.listItems.map((li,key) => <li {...{key}}>{li}</li>) */}\n{/* //     } */}\n{/* //     </h4> */}\n{/* //     <h2>{this.state.text}</h2> */}\n  </div>\n)\n// }\n}\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,SAASC,GAAT,CAAcC,KAAd,EAAqB;EACnB;EACA;EACA;EACA;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACE;IAAA,wBACE,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF,CA/DqB,CAsFrB;AACC;;KAvFQD,G;AAwFT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}