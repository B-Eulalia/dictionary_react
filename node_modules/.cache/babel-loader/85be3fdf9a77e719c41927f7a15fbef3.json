{"ast":null,"code":"var _jsxFileName = \"/Users/fmarcu/Desktop/dictionary_react/src/component/searchWord.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchW(_ref) {\n  _s();\n\n  let {\n    list,\n    setList\n  } = _ref;\n  let dictionary = list;\n  alert(Object.key(list));\n  const [searchWord, setSearchWord] = useState('');\n\n  const WordSearch = e => {\n    e.preventDefault();\n\n    for (let i = 0; i < dictionary.length; ++i) {\n      if (dictionary[i].addWord === searchWord) {\n        document.getElementById('mess').innerHTML = \"Word exist in the dictionary\";\n        break;\n      } else {\n        document.getElementById('mess').innerHTML = \"Word dont exist in the dictionary\";\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: WordSearch,\n    children: [\"Look for the word\", /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"searchWord\",\n      value: searchWord,\n      onChange: e => setSearchWord(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \" Search \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"mess\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n}\n\n_s(SearchW, \"Nij3VtGDDcFYgrM+ffgKXnXjCUc=\");\n\n_c = SearchW;\nexport default SearchW;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchW\");","map":{"version":3,"names":["React","useState","SearchW","list","setList","dictionary","alert","Object","key","searchWord","setSearchWord","WordSearch","e","preventDefault","i","length","addWord","document","getElementById","innerHTML","target","value"],"sources":["/Users/fmarcu/Desktop/dictionary_react/src/component/searchWord.js"],"sourcesContent":["import React, { useState} from \"react\";\n\n\nfunction SearchW({list, setList}) {\n  let dictionary = list;\n  alert(Object.key(list));\n  const [searchWord, setSearchWord] = useState(''); \n  const WordSearch = (e) => {\n    e.preventDefault();\n    for (let i = 0; i < dictionary.length; ++i) {\n      if (dictionary[i].addWord=== searchWord) {\n        document.getElementById('mess').innerHTML = \"Word exist in the dictionary\";\n        break;\n      } else {\n        document.getElementById('mess').innerHTML  = \"Word dont exist in the dictionary\";\n        }\n      }\n    }\n    return <form onSubmit={WordSearch}>Look for the word\n    <input name ='searchWord' value ={searchWord} onChange={(e) => setSearchWord(e.target.value)}/>\n    <button> Search </button>\n    <p id = \"mess\"></p>\n    </form>\n}\nexport default SearchW;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;;;AAGA,SAASC,OAAT,OAAkC;EAAA;;EAAA,IAAjB;IAACC,IAAD;IAAOC;EAAP,CAAiB;EAChC,IAAIC,UAAU,GAAGF,IAAjB;EACAG,KAAK,CAACC,MAAM,CAACC,GAAP,CAAWL,IAAX,CAAD,CAAL;EACA,MAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;;EACA,MAAMU,UAAU,GAAIC,CAAD,IAAO;IACxBA,CAAC,CAACC,cAAF;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,UAAU,CAACU,MAA/B,EAAuC,EAAED,CAAzC,EAA4C;MAC1C,IAAIT,UAAU,CAACS,CAAD,CAAV,CAAcE,OAAd,KAAyBP,UAA7B,EAAyC;QACvCQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,GAA4C,8BAA5C;QACA;MACD,CAHD,MAGO;QACLF,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,GAA6C,mCAA7C;MACC;IACF;EACF,CAVH;;EAWE,oBAAO;IAAM,QAAQ,EAAER,UAAhB;IAAA,6CACP;MAAO,IAAI,EAAE,YAAb;MAA0B,KAAK,EAAGF,UAAlC;MAA8C,QAAQ,EAAGG,CAAD,IAAOF,aAAa,CAACE,CAAC,CAACQ,MAAF,CAASC,KAAV;IAA5E;MAAA;MAAA;MAAA;IAAA,QADO,eAEP;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFO,eAGP;MAAG,EAAE,EAAG;IAAR;MAAA;MAAA;MAAA;IAAA,QAHO;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAKH;;GApBQnB,O;;KAAAA,O;AAqBT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}