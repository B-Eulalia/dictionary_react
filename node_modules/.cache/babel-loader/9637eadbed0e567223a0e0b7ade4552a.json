{"ast":null,"code":"var _jsxFileName = \"/Users/fmarcu/Desktop/dic1/src/component/searchWord.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction searchWordList(prop) {\n  prop.preventDefault();\n  let wordLookFor = prop.wordInputSearch;\n  let listWord = prop.listItems;\n\n  for (let i = 0; i < listWord.length; ++i) {\n    if (listWord[i] === wordLookFor) {\n      this.setState({\n        text: 'Word exist in the dictionary'\n      });\n      break;\n    } else {\n      this.setState({\n        text: 'Word dont exist in the dictionary'\n      });\n    }\n  }\n}\n\nfunction SearchW(prop) {\n  _s();\n\n  const [wordInputSearch, wordSearch] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: searchWordList,\n      children: [\"Look for the word\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: wordInputSearch,\n        onChange: wordSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: prop.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SearchW, \"ckbXaFemb7fPCCa0SQ2mmSzg0dY=\");\n\n_c = SearchW;\nexport default SearchW;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchW\");","map":{"version":3,"names":["React","useState","searchWordList","prop","preventDefault","wordLookFor","wordInputSearch","listWord","listItems","i","length","setState","text","SearchW","wordSearch"],"sources":["/Users/fmarcu/Desktop/dic1/src/component/searchWord.js"],"sourcesContent":["import  React, {useState} from \"react\";\nfunction searchWordList (prop) {\n    prop.preventDefault();\n  let wordLookFor = prop.wordInputSearch;\n  let listWord = prop.listItems;\n  for (let i = 0; i < listWord.length; ++i) {\n       if (listWord[i] === wordLookFor) {\n        this.setState({\n          text: 'Word exist in the dictionary',\n        })\n         break;\n       } else {\n        this.setState({\n          text:'Word dont exist in the dictionary',\n        })\n       }\n      }\n     }  \n  \nfunction SearchW(prop) {\n    const [wordInputSearch, wordSearch] = useState(\"\");\n    return  <><form onSubmit={searchWordList}>Look for the word\n        <input value={wordInputSearch} onChange={wordSearch} />\n        <button type=\"submit\">Search</button>\n    </form><h2>{prop.text}</h2></>\n}\n\nexport default SearchW;"],"mappings":";;;AAAA,OAAQA,KAAR,IAAgBC,QAAhB,QAA+B,OAA/B;;;;AACA,SAASC,cAAT,CAAyBC,IAAzB,EAA+B;EAC3BA,IAAI,CAACC,cAAL;EACF,IAAIC,WAAW,GAAGF,IAAI,CAACG,eAAvB;EACA,IAAIC,QAAQ,GAAGJ,IAAI,CAACK,SAApB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqC,EAAED,CAAvC,EAA0C;IACrC,IAAIF,QAAQ,CAACE,CAAD,CAAR,KAAgBJ,WAApB,EAAiC;MAChC,KAAKM,QAAL,CAAc;QACZC,IAAI,EAAE;MADM,CAAd;MAGC;IACD,CALD,MAKO;MACN,KAAKD,QAAL,CAAc;QACZC,IAAI,EAAC;MADO,CAAd;IAGA;EACD;AACD;;AAEN,SAASC,OAAT,CAAiBV,IAAjB,EAAuB;EAAA;;EACnB,MAAM,CAACG,eAAD,EAAkBQ,UAAlB,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;EACA,oBAAQ;IAAA,wBAAE;MAAM,QAAQ,EAAEC,cAAhB;MAAA,6CACN;QAAO,KAAK,EAAEI,eAAd;QAA+B,QAAQ,EAAEQ;MAAzC;QAAA;QAAA;QAAA;MAAA,QADM,eAEN;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFM;IAAA;MAAA;MAAA;MAAA;IAAA,QAAF,eAGD;MAAA,UAAKX,IAAI,CAACS;IAAV;MAAA;MAAA;MAAA;IAAA,QAHC;EAAA,gBAAR;AAIH;;GANQC,O;;KAAAA,O;AAQT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}