{"ast":null,"code":"var _jsxFileName = \"/Users/fmarcu/Desktop/dic1/src/component/searchWord.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction searchWordList() {\n  props.preventDefault();\n  let wordLookFor = props.wordInputSearch;\n  let listWord = props.listItems;\n\n  for (let i = 0; i < listWord.length; ++i) {\n    if (listWord[i] === wordLookFor) {\n      this.setState({\n        text: 'Word exist in the dictionary'\n      });\n      break;\n    } else {\n      this.setState({\n        text: 'Word dont exist in the dictionary'\n      });\n    }\n  }\n}\n\nfunction SearchW(_props) {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: searchWordList,\n    children: [\"Look for the word\", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: wordInputSearch,\n      onChange: wordSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this);\n}\n\n_c = SearchW;\nexport default SearchW;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchW\");","map":{"version":3,"names":["React","searchWordList","props","preventDefault","wordLookFor","wordInputSearch","listWord","listItems","i","length","setState","text","SearchW","_props","wordSearch"],"sources":["/Users/fmarcu/Desktop/dic1/src/component/searchWord.js"],"sourcesContent":["import React from \"react\";\n\nfunction searchWordList () {\n    props.preventDefault();\n  let wordLookFor = props.wordInputSearch;\n  let listWord = props.listItems;\n  for (let i = 0; i < listWord.length; ++i) {\n       if (listWord[i] === wordLookFor) {\n        this.setState({\n          text: 'Word exist in the dictionary',\n        })\n         break;\n       } else {\n        this.setState({\n          text:'Word dont exist in the dictionary',\n        })\n       }\n      }\n     }  \n  \nfunction SearchW(_props) {\n    return  <form onSubmit={searchWordList}>Look for the word   \n        <input value={wordInputSearch} onChange={wordSearch}/>\n       <button type=\"submit\">Search</button>\n       </form>\n}\n\nexport default SearchW;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,cAAT,GAA2B;EACvBC,KAAK,CAACC,cAAN;EACF,IAAIC,WAAW,GAAGF,KAAK,CAACG,eAAxB;EACA,IAAIC,QAAQ,GAAGJ,KAAK,CAACK,SAArB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqC,EAAED,CAAvC,EAA0C;IACrC,IAAIF,QAAQ,CAACE,CAAD,CAAR,KAAgBJ,WAApB,EAAiC;MAChC,KAAKM,QAAL,CAAc;QACZC,IAAI,EAAE;MADM,CAAd;MAGC;IACD,CALD,MAKO;MACN,KAAKD,QAAL,CAAc;QACZC,IAAI,EAAC;MADO,CAAd;IAGA;EACD;AACD;;AAEN,SAASC,OAAT,CAAiBC,MAAjB,EAAyB;EACrB,oBAAQ;IAAM,QAAQ,EAAEZ,cAAhB;IAAA,6CACJ;MAAO,KAAK,EAAEI,eAAd;MAA+B,QAAQ,EAAES;IAAzC;MAAA;MAAA;MAAA;IAAA,QADI,eAEL;MAAQ,IAAI,EAAC,QAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFK;EAAA;IAAA;IAAA;IAAA;EAAA,QAAR;AAIH;;KALQF,O;AAOT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}